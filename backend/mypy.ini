[mypy]
check_untyped_defs = True
disallow_any_generics = True
disallow_untyped_calls = True
disallow_untyped_defs = True
ignore_missing_imports = True
strict_optional = True
plugins = sqlalchemy.ext.mypy.plugin

# Exclude virtual environment, tests, and other directories
exclude = venv/|\.venv/|build/|dist/|backend/alembic/|tests/

# Python version to target
python_version = 3.12

# Additional helpful settings
warn_return_any = True
warn_unused_configs = True

# SQLAlchemy-specific configuration
[mypy-sqlalchemy.*]
ignore_missing_imports = True

# Allow untyped decorators in SQLAlchemy models
[mypy-backend.storage.models]
disallow_untyped_decorators = False
check_untyped_defs = False

# Be more lenient with database files
[mypy-backend.storage.*]
disallow_untyped_calls = False

# Exclude test/example files
[mypy-init_db]
ignore_errors = True

[mypy-example_usage]
ignore_errors = True

# SQLAlchemy Column assignment issues - fundamental mypy limitation
# At runtime, SQLAlchemy Column attributes behave as their underlying types
# but mypy sees the Column type annotation, causing false assignment errors
[mypy-crud.*]
disable_error_code = assignment

[mypy-services.telegram_post_service]
disable_error_code = arg-type,assignment

# FastAPI/Starlette error handler signature evolution - framework compatibility issue
[mypy-utils.error_handlers]
disable_error_code = arg-type